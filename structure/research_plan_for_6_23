１、H_dimerが反転していなかったため、それの原因解明、およびMD実行
→(/home/nakayama/STATE/outs/dimer_only/monomer_dimer_for_python/dimer_100K_5_2/H_dimer_lmp_tmp)にて修正完了
→oldデータはH_dimer_lmp_tmp_old_not_reversedとして保存
２、H_dimer反転での元素名置換、xyzのcsvファイル作成、PTCDIの特徴量のcsvファイル作成、さらに、psの修正も
→num_to_string.shにてoutput.xyzを置換
→output.xyzがlmp_tmp.xyz（0.5fs）であったためlmp_tmp4.xyz(100fs)に変更して再実行
→make_csv.pyについて0.1psごとに表示するように変更
→make_csv.pyを3種それぞれ実行
→localに?_PTCDI.csvを落とす
３、pythonにて図で表示
→OK
４、分布の中心のデータを取ってくるプログラムを作成
→OK
→?_xyz.csvも作成
５、S体?→R体？？のモノマーについても実行したMDについても分布を作成
→/home/nakayama/STATE/outs/dimer_only/monomer_dimer_for_python/monomer_100K/R_monomer_new_6_23
→R_PTCDI.csv作成
６、分布の中心のデータを取ってくる
→OK
→?_out
７、それぞれ（H_dimer、I_dimer、N_dimer、monomer）についてstate用のファイルに変換
/home/nakayama/STATE/outs/STATE_12_19/6_23_rec-vdW-DF2/H_dimer_rev-vdW-DF2_newを作成
→?_out→output.xyzに変換
./shift.fep < output.xyz > state.xyzを実行
８、STATEで最適化
→計算投入OK
９、最適化前後のエネルギーを抽出
１０、最適化後の5つの構造についてそれぞれ光学特性を計算









めも

Hの離れる前、離れた後（100Kの前後）
I、N
のエネルギー
分布の中心の構造を取ってくる

stateで安定化前後のエネルギー

安定化ごの光学特性を
ただし、キラルは同じに（H＿dimerをかえる）

モノマーも分布を作成
その中心を
